{"version":3,"sources":["components/FindMovie/FindMovie.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","App.tsx","index.tsx"],"names":["Error","MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","MOVIE_URL","getMovie","title","a","fetch","respone","json","FindMovie","addMovie","useState","movieTitle","setMovieTitle","foundMovie","setFoundMovie","withoutError","error","setError","getfoundMovie","cantFind","onSubmit","event","preventDefault","some","wasAdded","enterTitle","handleSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","handleTitle","length","onClick","App","setMovies","prev","ReactDOM","render","document","getElementById"],"mappings":"sPAYKA,E,yECLQC,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCffC,G,MAAY,+CAEX,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACiBC,MAAM,GAAD,OAAIJ,GAAJ,OAAgBE,IADtC,cACCG,EADD,yBAGEA,EAAQC,QAHV,4C,gCHUFpB,K,gBAAAA,E,gCAAAA,E,kDAAAA,E,iCAAAA,M,KAOE,IAAMqB,EAA6B,SAAC,GAGpC,IAFLC,EAEI,EAFJA,SACAX,EACI,EADJA,OAEA,EAAoCY,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAuB,MAA3D,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAASvB,EAAM4B,cAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAa,uCAAG,4BAAAd,EAAA,sEACAF,EAASS,GADT,WACdrB,EADc,QAGTK,MAHS,uBAIlBsB,EAAS9B,EAAMgC,UAJG,0BASpBF,EAAS9B,EAAM4B,cACfD,EAAcxB,GAVM,2CAAH,qDAqCnB,OACE,qCACE,uBACEC,UAAU,aACV6B,SAAU,SAAAC,GAAK,OAvBA,SAACA,GAGpB,GAFAA,EAAMC,iBAEFT,IAAeG,EAAO,CACxB,GAAKlB,EAAOyB,MAAK,SAAAjC,GAAK,OAAIA,EAAMU,SAAWa,EAAWb,UAKpD,YAFAiB,EAAS9B,EAAMqC,UAFff,EAASI,QAOXI,EAAS9B,EAAMsC,YAGjBb,EAAc,IACdE,EAAc,MAOSY,CAAaL,IAFlC,UAIE,sBAAK9B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoC,QAAQ,cAAjC,yBAIA,qBAAKpC,UAAU,UAAf,SACE,uBACEqC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAWwC,IACT,QACA,CAAE,YAAaf,IAEjBgB,MAAOrB,EACPsB,SAAU,SAAAZ,GAAK,OA7CP,SAACA,GACnBT,EAAcS,EAAMa,OAAOF,OAC3Bf,EAAS9B,EAAM4B,cA2CcoB,CAAYd,QAIlCL,EAAMoB,OAAS,GACd,mBAAG7C,UAAU,iBAAb,SACGyB,OAKP,sBAAKzB,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,kBACV8C,QAAS,WACPnB,KAJJ,4BAWF,qBAAK3B,UAAU,UAAf,SACE,wBACEqC,KAAK,SACLrC,UAAU,oBAFZ,qCAULsB,GACC,sBAAKtB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOuB,WItHfyB,EAAgB,WAC3B,MAA4B5B,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAeyC,EAAf,KAWA,OACE,sBAAKhD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEkB,SAhBS,SAACnB,GAChBiD,GAAU,SAACC,GACT,MAAM,GAAN,mBACKA,GADL,CAEElD,QAaEQ,OAAQA,UCrBlB2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e38c6acc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n  movies: Movie[],\n}\n\nenum Error {\n  withoutError = '',\n  enterTitle = 'Enter a movie name',\n  cantFind = 'Can not find a movie with such a title',\n  wasAdded = 'Already in your list',\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  addMovie,\n  movies,\n}) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(Error.withoutError);\n\n  const getfoundMovie = async () => {\n    const movie = await getMovie(movieTitle);\n\n    if (!movie.Title) {\n      setError(Error.cantFind);\n\n      return;\n    }\n\n    setError(Error.withoutError);\n    setFoundMovie(movie);\n  };\n\n  const handleTitle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setMovieTitle(event.target.value);\n    setError(Error.withoutError);\n  };\n\n  const handleSubmit = (event:React.FormEvent) => {\n    event.preventDefault();\n\n    if (foundMovie && !error) {\n      if (!movies.some(movie => movie.imdbID === foundMovie.imdbID)) {\n        addMovie(foundMovie);\n      } else {\n        setError(Error.wasAdded);\n\n        return;\n      }\n    } else {\n      setError(Error.enterTitle);\n    }\n\n    setMovieTitle('');\n    setFoundMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': error },\n              )}\n              value={movieTitle}\n              onChange={event => handleTitle(event)}\n            />\n          </div>\n\n          {error.length > 0 && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                getfoundMovie();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const MOVIE_URL = 'https://www.omdbapi.com/?apikey=95e31c65&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const respone = await fetch(`${MOVIE_URL}${title}`);\n\n  return respone.json();\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    setMovies((prev) => {\n      return [\n        ...prev,\n        movie,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}